<?xml version="1.0"?>
<!-- This file was automatically generated from C sources - DO NOT EDIT!
To affect the contents of this file, edit the original C definitions,
and/or use gtk-doc annotations.  -->
<repository version="1.2"
            xmlns="http://www.gtk.org/introspection/core/1.0"
            xmlns:c="http://www.gtk.org/introspection/c/1.0"
            xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
  <include name="GObject" version="2.0"/>
  <package name="gobject-2.0"/>
  <c:include name="gettype.h"/>
  <namespace name="GetType"
             version="1.0"
             shared-library="libgettype.so"
             c:identifier-prefixes="GetType"
             c:symbol-prefixes="gettype">
    <class name="Object"
           c:symbol-prefix="object"
           c:type="GetTypeObject"
           parent="GObject.Object"
           glib:type-name="GetTypeObject"
           glib:get-type="gettype_object_get_type"
           glib:type-struct="ObjectClass">
      <position filename="../gettype.h" line="13" column="-1"/>
      <position filename="../gettype.h" line="22" column="-1"/>
      <constructor name="new" c:identifier="gettype_object_new">
        <position filename="../gettype.h" line="28" column="-1"/>
        <return-value transfer-ownership="full">
          <type name="Object" c:type="GetTypeObject*"/>
        </return-value>
      </constructor>
      <function name="nonmeta2_get_type"
                c:identifier="gettype_object_nonmeta2_get_type">
        <doc xml:space="preserve"
             filename="../gettype.c"
             line="38"
             column="None">This shouldn't be scanned as a *_get_type function because it doesn't return
a GType. It will generate a warning.</doc>
        <position filename="../gettype.h" line="35" column="-1"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gettype.c"
               line="44"
               column="None">true</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
      </function>
      <function name="nonmeta_get_gtype"
                c:identifier="gettype_object_nonmeta_get_gtype">
        <doc xml:space="preserve"
             filename="../gettype.c"
             line="52"
             column="None">This shouldn't be scanned as a *_get_type function because it doesn't return
a GType. It will generate a warning.</doc>
        <position filename="../gettype.h" line="38" column="-1"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gettype.c"
               line="58"
               column="None">true</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
      </function>
      <method name="nonmeta1_get_type"
              c:identifier="gettype_object_nonmeta1_get_type">
        <doc xml:space="preserve"
             filename="../gettype.c"
             line="23"
             column="None">This shouldn't be scanned as a *_get_type function because it takes
arguments.</doc>
        <position filename="../gettype.h" line="32" column="-1"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gettype.c"
               line="30"
               column="None">0</doc>
          <type name="GType" c:type="GType"/>
        </return-value>
        <parameters>
          <instance-parameter name="obj" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gettype.c"
                 line="25"
                 column="None">self</doc>
            <type name="Object" c:type="GetTypeObject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="ObjectClass"
            c:type="GetTypeObjectClass"
            glib:is-gtype-struct-for="Object">
      <position filename="../gettype.h" line="13" column="-1"/>
      <position filename="../gettype.h" line="22" column="-1"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
  </namespace>
</repository>
